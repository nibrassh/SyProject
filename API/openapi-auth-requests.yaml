openapi: 3.0.0
info:
  title: Auth API
  version: 1.0.0
  description: Authentication and user management endpoints.

servers:
  - url: http://localhost:5000/api/auth/v1

paths:
  /signin:
    post:
      summary: User sign in
      description: Authenticates a user and sets access/refresh tokens in HTTP-only cookies.
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: secret123
      responses:
        '200':
          description: Successful sign in
        '400':
          description: Missing email or password
        '401':
          description: Invalid credentials
        '403':
          description: Account deactivated

  /refresh-token:
    post:
      summary: Refresh access token
      description: Uses the refresh token cookie to issue a new access token.
      tags:
        - Auth
      responses:
        '200':
          description: New access token issued
        '401':
          description: No refresh token found
        '403':
          description: Invalid refresh token

  /signout:
    post:
      summary: Sign out
      description: Clears authentication cookies. Requires admin privileges.
      tags:
        - Auth
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Sign out successful

  /create-user:
    post:
      summary: Create a new user
      description: Creates a new user account. Requires admin privileges.
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  example: john@example.com
                password:
                  type: string
                  example: mypassword123
                isAdmin:
                  type: boolean
                  example: false
      responses:
        '200':
          description: User created successfully
        '403':
          description: User already exists or invalid credentials

  /{id}:
    delete:
      summary: Delete a user
      description: Deletes a user by ID. Requires admin privileges.
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: User ID
      responses:
        '200':
          description: User deleted successfully
        '404':
          description: User not found

  /toggle-admin/{id}:
    put:
      summary: Toggle admin status
      description: Flips a user's admin status between true and false.
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: User ID
      responses:
        '200':
          description: User admin status updated
        '404':
          description: User not found

  /users:
    get:
      summary: Get all users
      description: Returns a list of all users excluding their passwords.
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Users fetched successfully

  /check-admin:
    get:
      summary: Verify admin access
      description: Checks if the authenticated user is an admin.
      tags:
        - Auth
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Admin access verified
        '403':
          description: Forbidden

